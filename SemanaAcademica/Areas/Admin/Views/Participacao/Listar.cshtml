@model PagedList.IPagedList<SemanaAcademica.Models.ObjectModel.ParticipacaoModel>
@{
    ViewBag.Title = "Lista de Presença";
}

<center>

    <h2>Lista de Participação</h2>
    <p>
        <h3>
            Palestra: @ViewBag.nomeEvento   
        </h3>
    </p>
    <p>@Html.ActionLink("Gerar Relatório em PDF", "ListarPresenca", "Relatorio", new { id = @ViewBag.IdEvento }, null)</p>
    <table class="table table-bordered">
        <tr>
            <th>
                Registro
            </th>
            <th>
                Matrícula UTFPR?
            </th>
            <th>
                Nome Participante
            </th>
            <th>
                Universidade
            </th>
            <th>
                Curso
            </th>
            <th>
                Data/Hora Entrada
            </th>
            <th>
                Data/Hora Saída
            </th>
        </tr>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Registro)
                </td>
                @if (item.Matricula == true)
                {
                <td>Sim</td>
                }
                else
                {
                <td>Não</td>
                }
                <td>
                    @Html.DisplayFor(modelItem => item.NomeParticipante)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.universidade)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.curso)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.HoraEntrada)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.HoraSaida)
                </td>
            </tr>
        }
    </table>

    <div>
        Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
        of @Model.PageCount

        @if (Model.HasPreviousPage)
        {
            @Html.ActionLink("<<", "Listar", new { pagina = 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
            @Html.Raw(" ");
            @Html.ActionLink("< Anterior", "Listar", new { pagina = Model.PageNumber - 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
        }
        else
        {
            @:<<
            @Html.Raw(" ");
            @:< Anterior
        }

        @if (Model.HasNextPage)
        {
            @Html.ActionLink("Próxima >", "Listar", new { pagina = Model.PageNumber + 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
            @Html.Raw(" ");
            @Html.ActionLink(">>", "Listar", new { pagina = Model.PageCount, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
        }
        else
        {
            @:Próxima >
            @Html.Raw(" ")
            @:>>
        }
    </div>
</center>
