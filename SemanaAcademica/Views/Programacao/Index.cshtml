@model SemanaAcademica.Models.ViewModel.IndexProgramacaoViewModel

@{
    ViewBag.Title = "Semana Acadêmica - Programação";
}

<h2>Programação Geral</h2>
@*@Html.ActionLink("Auditório", "Index", new { id = "1" }) | @Html.ActionLink("Miniauditório", "Index", new { id = "2" })*@

@{
    var horarios = Model.Horarios.Count() > 0 ? Model.Horarios.OrderBy(h => h.HoraInicio.Day).ThenBy(h => h.HoraInicio.Hour) : null;
}

@if (horarios != null)
{
    var menorDt = horarios.OrderBy(h => h.HoraInicio).First().HoraInicio;
    var menorHora = horarios.OrderBy(h => h.HoraInicio.Hour).First().HoraInicio.Hour;
    var maiorDt = horarios.OrderBy(h => h.HoraInicio).Last().HoraInicio;
    var maiorHora = horarios.OrderBy(h => h.HoraInicio.Hour).Last().HoraInicio.Hour;
    <table class="table">
        <tr>
            <td style="background-color: #EFEEEF; color: black"></td>
            @for (var dt = menorDt.AddHours(-menorDt.Hour); dt <= maiorDt; dt = dt.AddDays(1))
            {
                <td style="background-color: #EFEEEF; color: black">@dt.Date.ToShortDateString()</td>
            }
        </tr>
        @for (var hora = menorHora; hora <= maiorHora; hora++)
        {
            <tr>
                <td style="background-color: #EFEEEF; color: black">
                    @hora:00
                </td>
                @for (var dt = menorDt.AddHours(-menorDt.Hour); dt <= maiorDt; dt = dt.AddDays(1))
                {
                    <td style="border: 1px solid #c7c3c3">
                        @Html.Raw(
                            String.Join(
                                "<br /><br />",
                                Model
                                .Horarios
                                .Where(h =>
                                    h.HoraInicio.Hour >= hora &&
                                    h.HoraInicio.Hour < (hora + 1) &&
                                    h.HoraInicio.Day == dt.Day)
                                .Select(h =>
                                    {
                                        var evento = Model.Eventos.FirstOrDefault(e => e.IdEvento == h.IdEvento);
                                        return h.HoraInicio.Hour.ToString("00") + ":" + h.HoraInicio.Minute.ToString("00") + "/" + h.HoraFim.Hour.ToString("00") + ":" + h.HoraFim.Minute.ToString("00") + " - " + evento.Nome + " (" + Model.Locais.FirstOrDefault(l => l.IdLocal == h.IdLocal).Nome + ")";
                                    }
                                    )
                                )
                            )
                    </td>
                }
            </tr>
        }
    </table>
} else {
    <div>Nenhum evento em aberto</div>
}