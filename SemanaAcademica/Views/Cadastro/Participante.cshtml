@model SemanaAcademica.Models.ViewModel.CadastroParticipanteViewModel

@{
    ViewBag.Title = "Participante";
}
<h2>@ViewBag.Title</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-horizontal">
        <h4>Cadastro de Participantes</h4>
        <hr />
        <div class="form-group">
            @Html.LabelFor(model => model.Nome)
            @Html.EditorFor(model => model.Nome)
            @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Registro)
            @Html.EditorFor(model => model.Registro)
            @Html.ValidationMessageFor(model => model.Registro, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <label>
                É matrícula?
                @Html.CheckBoxFor(model => model.Matricula, new { @id = "checkBoxMatricula" })
            </label>
            @Html.ValidationMessageFor(model => model.Matricula, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Email)
            @Html.EditorFor(model => model.Email)
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.EmailConfirmacao)
            @Html.EditorFor(model => model.EmailConfirmacao)
            @Html.ValidationMessageFor(model => model.EmailConfirmacao, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Senha)
            @Html.PasswordFor(model => model.Senha)
            @Html.ValidationMessageFor(model => model.Senha, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.SenhaConfirmacao)
            @Html.PasswordFor(model => model.SenhaConfirmacao)
            @Html.ValidationMessageFor(model => model.SenhaConfirmacao, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Telefone)
            @Html.EditorFor(model => model.Telefone)
            @Html.ValidationMessageFor(model => model.Telefone, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Universidade)
            @Html.EditorFor(model => model.Universidade)
            @Html.ValidationMessageFor(model => model.Universidade, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Curso)
            <div>
                @Html.DropDownListFor(model => model.Curso,
                new SelectList(Model.ListaCurso, "Key", "Value"),
                "- Selecione o curso -",
                new { @class = "form-control", id = "dropDownCursos" })
                @Html.ValidationMessageFor(model => model.Curso, "", new { @class = "text-danger" })
            </div>
            <div class="editor-field" id="divTextCurso">
                @Html.EditorFor(model => model.Curso)
                @Html.ValidationMessageFor(model => model.Curso, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group text-right">
            <div class="col-md-4">
                <button type="submit" class="btn btn-success">Cadastrar</button>
            </div>
        </div>
    </div>
}
    


<div>
    @Html.ActionLink("Voltar", "Index", "Home")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script src="https://code.jquery.com/jquery-3.1.0.min.js" integrity="sha256-cCueBR6CsyA4/9szpPfrX3s49M9vUU5BgtiJj06wt/s=" crossorigin="anonymous"></script>
<script type="text/javascript">

    $(function () {
        verificaCheckboxMatricula();
        resizeDropDown();
    });

    $('#checkBoxMatricula').click(function () {
        verificaCheckboxMatricula();
    });

    function verificaCheckboxMatricula() {
        if ($('#checkBoxMatricula').is(':checked')) {
            escondePrimeiroMostraSegundo("#divTextCurso", "#dropDownCursos");
        } else {
            escondePrimeiroMostraSegundo("#dropDownCursos", "#divTextCurso");
        }
    }

    function escondePrimeiroMostraSegundo(esconde, mostra) {
        $(esconde).attr('disabled', 'disabled');
        $(esconde).hide();
        $(mostra).removeAttr('disabled');
        $(mostra).show();
    }

    function resizeDropDown() {
        $('#dropDownCursos').change(function () {
            $("#width_tmp_option").html($('#dropDownCursos option:selected').text());
            $(this).width($("#width_tmp_select").width());
        });
    }
</script>